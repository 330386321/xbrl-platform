<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.changhong.xbrl.sysmanage.dao.XbrlSmUserRoleMapper">
    <!-- XbrlSmUserRole的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_XbrlSmUserRole_Map" type="com.changhong.xbrl.sysmanage.domain.XbrlSmUserRole">
        <result column="role_id" property="roleId" />
        <result column="user_id" property="userId" />
    </resultMap>

    <resultMap id="result_RoleByUserMap"  type="java.util.HashMap">
        <result property="key" column="role_id" />
        <result property="value" column="name" />
    </resultMap>

    <!-- 数据库中表名为:xbrl_sm_user_role的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="xbrl_sm_user_role_Column">
        xbrl_sm_user_role.role_id as role_id
        ,xbrl_sm_user_role.user_id as user_id
    </sql>

    <!-- 获得类名为:XbrlSmUserRole对应数据库中表的数据集合 -->
    <select id="selectXbrlSmUserRole" resultMap="result_XbrlSmUserRole_Map">
        select 
        <include refid="xbrl_sm_user_role_Column" /> 
        from xbrl_sm_user_role
    </select>

    <select id="selectRoleByUserId" parameterType="java.lang.Integer" resultMap="result_RoleByUserMap">
        SELECT  xbrl_sm_user_role.role_id, xbrl_sm_role.`name`
        FROM xbrl_sm_user_role LEFT JOIN xbrl_sm_role ON xbrl_sm_user_role.`role_id`=xbrl_sm_role.`id`
        <where>
            <if test="userId != null">
                xbrl_sm_user_role.user_id=#{userId}
            </if>
        </where>
    </select>

    <!-- 将XbrlSmUserRole插入到对应数据库的表中,包括属性值为null的数据-->
    <insert id="insertXbrlSmUserRole" parameterType="com.changhong.xbrl.sysmanage.domain.XbrlSmUserRole">
        insert into xbrl_sm_user_role(role_id,user_id) 
        values(#{roleId},#{userId})
    </insert>

    <!-- 通过XbrlSmUserRole的user_id列表将数据库表中对应的数据删除-->
    <delete id="deleteXbrlSmUserRoleByUserIds">
        delete from xbrl_sm_user_role
        where user_id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!-- 通过XbrlSmUserRole的user_id将数据库表中对应的数据删除-->
    <delete id="deleteXbrlSmUserRoleByRoleId" parameterType="java.lang.Integer">
        delete from xbrl_sm_user_role where role_id = #{roleId}
    </delete>
    <!-- 通过XbrlSmUserRole的user_id将数据库表中对应的数据删除-->
    <delete id="deleteXbrlSmUserRoleByUserId" parameterType="java.lang.Integer">
        delete from xbrl_sm_user_role where user_id = #{userId}
    </delete>

    <insert id="insertXbrlSmUserRoles">
        insert into xbrl_sm_user_role(role_id,user_id)
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.roleId},#{item.userId})
        </foreach>
    </insert>


</mapper>